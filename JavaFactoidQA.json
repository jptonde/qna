{
  "version": "1.0",
  "data": [
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f1",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f2",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f3",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f4",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f5",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f6",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f7",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f8",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f9",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f10",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f11",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f12",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f13",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f14",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f15",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f16",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f17",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f18",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f19",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f20",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f21",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f22",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f23",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f24",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f25",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f26",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f27",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f28",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f29",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f30",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f31",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f32",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f33",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f34",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f35",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f36",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f37",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f38",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f39",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f40",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f41",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f42",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f43",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f44",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f45",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f46",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f47",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f48",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f49",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f50",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f51",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f52",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f53",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f54",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f55",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f56",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f57",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f58",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f59",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f60",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f61",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f62",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f63",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f64",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f65",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f66",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f67",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f68",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f69",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f70",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f71",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f72",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f73",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f74",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f75",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f76",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f77",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f78",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f79",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f80",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f81",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f82",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f83",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f84",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f85",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f86",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f87",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f88",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f89",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f90",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f91",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f92",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f93",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f94",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f95",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f96",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f97",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f98",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f99",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f100",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f101",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f102",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f103",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f104",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f105",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f106",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f107",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f108",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f109",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f110",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f111",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f112",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f113",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f114",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f115",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f116",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f117",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f118",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f119",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f120",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f121",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f122",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f123",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f124",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f125",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f126",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f127",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f128",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f129",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f130",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f131",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f132",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f133",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f134",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f135",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f136",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f137",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f138",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f139",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f140",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f141",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f142",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f143",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f144",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f145",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f146",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f147",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f148",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f149",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f150",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f151",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f152",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f153",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f154",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f155",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f156",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f157",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f158",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f159",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f160",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f161",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f162",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f163",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f164",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f165",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f166",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f167",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f168",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f169",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f170",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f171",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f172",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f173",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f174",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f175",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f176",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f177",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f178",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f179",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f180",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f181",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f182",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f183",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f184",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f185",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f186",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f187",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f188",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f189",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f190",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f191",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f192",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f193",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f194",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f195",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f196",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f197",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f198",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f199",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f200",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f201",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f202",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f203",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f204",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f205",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f206",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f207",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f208",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f209",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f210",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f211",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f212",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f213",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f214",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f215",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f216",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f217",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f218",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f219",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f220",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f221",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f222",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f223",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f224",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f225",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f226",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f227",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f228",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f229",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f230",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f231",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f232",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f233",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f234",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f235",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f236",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f237",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f238",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f239",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f240",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f241",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f242",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f243",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f244",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f245",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f246",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f247",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f248",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f249",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f250",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f251",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f252",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f253",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f254",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f255",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f256",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f257",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f258",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f259",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f260",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f261",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f262",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f263",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f264",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f265",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f266",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f267",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f268",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f269",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f270",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f271",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f272",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f273",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f274",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f275",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f276",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f277",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f278",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f279",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f280",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f281",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f282",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f283",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f284",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f285",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f286",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f287",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f288",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f289",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f290",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f291",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f292",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f293",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f294",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f295",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f296",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f297",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f298",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f299",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f300",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f301",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f302",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f303",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f304",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f305",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f306",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f307",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f308",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f309",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f310",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f311",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f312",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f313",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f314",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f315",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f316",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f317",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f318",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f319",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f320",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f321",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f322",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f323",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f324",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f325",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f326",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f327",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f328",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f329",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f330",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f331",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f332",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f333",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f334",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f335",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f336",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f337",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f338",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f339",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f340",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f341",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f342",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f343",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f344",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f345",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f346",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f347",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f348",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f349",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f350",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f351",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f352",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f353",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f354",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f355",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f356",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f357",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f358",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f359",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f360",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f361",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f362",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f363",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f364",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f365",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f366",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f367",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f368",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f369",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f370",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f371",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f372",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f373",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f374",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f375",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f376",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f377",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f378",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f379",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f380",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f381",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f382",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f383",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f384",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f385",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f386",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f387",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f388",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f389",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f390",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f391",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f392",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f393",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f394",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f395",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f396",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f397",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f398",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f399",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f400",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f401",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f402",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f403",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f404",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f405",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f406",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f407",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f408",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f409",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f410",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f411",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f412",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f413",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f414",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f415",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f416",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f417",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f418",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f419",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f420",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f421",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f422",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f423",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f424",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f425",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f426",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f427",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f428",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f429",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f430",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f431",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f432",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f433",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f434",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f435",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f436",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f437",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f438",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f439",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f440",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f441",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f442",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f443",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f444",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f445",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f446",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f447",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f448",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f449",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f450",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f451",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f452",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f453",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f454",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f455",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f456",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f457",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f458",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f459",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f460",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f461",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f462",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f463",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f464",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f465",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f466",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f467",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f468",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f469",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f470",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f471",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f472",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f473",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f474",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f475",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f476",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f477",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f478",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f479",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f480",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f481",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f482",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f483",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f484",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f485",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f486",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f487",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f488",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f489",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f490",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f491",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f492",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f493",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f494",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f495",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f496",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f497",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f498",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f499",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f500",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f501",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f502",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f503",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f504",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f505",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f506",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f507",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f508",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f509",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f510",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f511",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f512",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f513",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f514",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f515",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f516",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f517",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f518",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f519",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f520",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f521",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f522",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f523",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f524",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f525",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f526",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f527",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f528",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f529",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f530",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f531",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f532",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f533",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f534",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f535",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f536",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f537",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f538",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f539",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f540",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f541",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f542",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f543",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f544",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f545",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f546",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f547",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f548",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f549",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f550",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f551",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f552",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f553",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f554",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f555",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f556",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f557",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f558",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f559",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f560",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f561",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f562",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f563",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f564",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f565",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f566",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f567",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f568",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f569",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f570",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f571",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f572",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f573",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f574",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f575",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f576",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f577",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f578",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f579",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f580",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f581",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f582",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f583",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f584",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f585",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f586",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f587",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f588",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f589",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f590",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f591",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f592",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f593",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f594",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f595",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f596",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f597",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f598",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f599",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f600",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f601",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f602",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f603",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f604",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f605",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f606",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f607",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f608",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f609",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f610",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f611",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f612",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f613",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f614",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f615",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f616",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f617",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f618",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f619",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f620",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f621",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f622",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f623",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f624",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f625",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f626",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f627",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f628",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f629",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f630",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f631",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f632",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f633",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f634",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f635",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f636",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f637",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f638",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f639",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f640",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f641",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f642",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f643",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f644",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f645",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f646",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f647",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f648",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f649",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f650",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f651",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f652",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f653",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f654",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f655",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f656",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f657",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f658",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f659",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f660",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f661",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f662",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f663",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f664",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f665",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f666",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f667",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f668",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f669",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f670",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f671",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f672",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f673",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f674",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f675",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f676",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f677",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f678",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f679",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f680",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f681",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f682",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f683",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f684",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f685",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f686",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f687",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f688",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f689",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f690",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f691",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f692",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f693",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f694",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f695",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f696",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f697",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f698",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f699",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f700",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f701",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f702",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f703",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f704",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f705",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f706",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f707",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f708",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f709",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f710",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f711",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f712",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f713",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f714",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f715",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f716",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f717",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f718",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f719",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f720",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f721",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f722",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f723",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f724",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f725",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f726",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f727",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f728",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f729",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f730",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f731",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f732",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f733",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f734",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f735",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f736",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f737",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f738",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f739",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f740",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f741",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f742",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f743",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f744",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f745",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f746",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f747",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f748",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f749",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f750",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f751",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f752",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f753",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f754",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f755",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f756",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f757",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f758",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f759",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f760",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f761",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f762",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f763",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f764",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f765",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f766",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f767",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f768",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f769",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f770",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f771",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f772",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f773",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f774",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f775",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f776",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f777",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f778",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f779",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f780",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f781",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f782",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f783",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f784",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f785",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f786",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f787",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f788",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f789",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f790",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f791",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f792",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f793",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f794",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f795",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f796",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f797",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f798",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f799",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f800",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f801",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f802",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f803",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f804",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f805",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f806",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f807",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f808",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f809",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f810",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f811",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f812",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f813",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f814",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f815",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f816",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f817",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f818",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f819",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f820",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f821",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f822",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f823",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f824",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f825",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f826",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f827",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f828",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f829",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f830",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f831",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f832",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f833",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f834",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f835",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f836",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f837",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f838",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f839",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f840",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f841",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f842",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f843",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f844",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f845",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f846",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f847",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f848",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f849",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f850",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f851",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f852",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f853",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f854",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f855",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f856",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f857",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f858",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f859",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f860",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f861",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f862",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f863",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f864",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f865",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f866",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f867",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f868",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f869",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f870",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f871",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f872",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f873",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f874",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f875",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f876",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f877",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f878",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f879",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f880",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f881",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f882",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f883",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f884",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f885",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f886",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f887",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f888",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f889",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f890",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f891",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f892",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f893",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f894",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f895",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f896",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f897",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f898",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f899",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f900",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f901",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f902",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f903",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f904",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f905",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f906",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f907",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f908",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f909",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f910",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f911",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f912",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f913",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f914",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f915",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f916",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f917",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f918",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f919",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f920",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f921",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f922",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f923",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f924",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f925",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f926",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f927",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f928",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f929",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f930",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f931",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f932",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f933",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f934",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f935",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f936",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f937",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f938",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f939",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f940",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f941",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f942",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f943",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f944",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f945",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f946",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f947",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f948",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f949",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f950",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f951",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f952",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f953",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f954",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f955",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f956",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f957",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f958",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f959",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f960",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f961",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f962",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f963",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f964",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f965",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f966",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f967",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f968",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f969",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f970",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f971",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f972",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f973",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f974",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f975",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f976",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f977",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f978",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f979",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f980",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f981",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f982",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f983",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f984",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f985",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f986",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f987",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f988",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f989",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f990",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f991",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f992",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f993",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f994",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f995",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "An exception in Java is an abnormal condition that disrupts the normal program flow. It is managed using try, catch, throw, throws, and finally blocks. Checked exceptions are verified at compile-time, while unchecked ones are not.",
          "qas": [
            {
              "id": "f996",
              "question": "What are the five keywords used in Java for exception handling?",
              "answers": [
                {
                  "text": "try, catch, throw, throws, and finally",
                  "answer_start": 105
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Multithreading in Java enables concurrent execution of two or more threads. Each thread shares the same memory space and can run independently. Threads can be created using Thread class or Runnable interface.",
          "qas": [
            {
              "id": "f997",
              "question": "Which two mechanisms are used in Java to create threads?",
              "answers": [
                {
                  "text": "Thread class or Runnable interface",
                  "answer_start": 173
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Java supports polymorphism which allows methods to behave differently based on object context. Method overloading represents compile-time polymorphism. Method overriding represents runtime polymorphism.",
          "qas": [
            {
              "id": "f998",
              "question": "Which type of polymorphism does method overloading represent in Java?",
              "answers": [
                {
                  "text": "compile-time polymorphism",
                  "answer_start": 125
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "Inheritance in Java allows a child class to inherit properties and behaviors from a parent class. Java supports single, multilevel, and hierarchical inheritance. Multiple inheritance is achieved using interfaces.",
          "qas": [
            {
              "id": "f999",
              "question": "What types of inheritance are supported in Java?",
              "answers": [
                {
                  "text": "single, multilevel, and hierarchical inheritance",
                  "answer_start": 112
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    },
    {
      "title": "JavaConceptFactoid",
      "paragraphs": [
        {
          "context": "The final keyword in Java can be used to restrict variables, methods, and classes. A final variable cannot be reassigned once initialized. A final method cannot be overridden and a final class cannot be inherited.",
          "qas": [
            {
              "id": "f1000",
              "question": "What does the final keyword prevent in Java classes?",
              "answers": [
                {
                  "text": "inherited",
                  "answer_start": 203
                }
              ],
              "is_impossible": false
            }
          ]
        }
      ]
    }
  ]
}